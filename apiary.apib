FORMAT: 1A
HOST: http://api.eventance.com/

# Eventance

Eventance public API.

# Auth [/]

Token-based authorization.

### API Token create [POST /api-token-auth/]
    
+ Request

            {
                "username": "test",
                "password": "test"
            }

+ Response 200 (application/json)

            {
                "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImFkbWluIiwib3JpZ19pYXQiOjE0MzEzMzU1MjgsInVzZXJfaWQiOjEsImVtYWlsIjoiYWRtaW5AYWRtaW4uY29tIiwiZXhwIjoxNDM5MzM1NTI4fQ.s84IiGYLz649KILx2NfZ7KfLk928xcLJvMC2mNlXB6Q"
            }

+ Response 400 (application/json)

            {
                "non_field_errors": [
                    "Unable to login with provided credentials."
                ]
            }
        
### API Token refresh [POST /api-token-refresh/]

+ Request
    
            {
                "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImFkbWluIiwib3JpZ19pYXQiOjE0MzEzMzU1MjgsInVzZXJfaWQiOjEsImVtYWlsIjoiYWRtaW5AYWRtaW4uY29tIiwiZXhwIjoxNDM5MzM1NTI4fQ.s84IiGYLz649KILx2NfZ7KfLk928xcLJvMC2mNlXB6Q"
            }
    
+ Response 200 (application/json)
    
            {
                "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImFkbWluIiwib3JpZ19pYXQiOjE0MzEzMzU1MjgsInVzZXJfaWQiOjEsImVtYWlsIjoiYWRtaW5AYWRtaW4uY29tIiwiZXhwIjoxNDM5MzM1NTI4fQ.s84IiGYLz649KILx2NfZ7KfLk928xcLJvMC2mNlXB6Q"
            }

+ Response 400 (application/json)

            {
                "non_field_errors": [
                    "Error decoding signature."
                ]
            }
        
### API Token verfy [POST /api-token-verify/]

+ Request
    
            {
                "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImFkbWluIiwib3JpZ19pYXQiOjE0MzEzMzU1MjgsInVzZXJfaWQiOjEsImVtYWlsIjoiYWRtaW5AYWRtaW4uY29tIiwiZXhwIjoxNDM5MzM1NTI4fQ.s84IiGYLz649KILx2NfZ7KfLk928xcLJvMC2mNlXB6Q"
            }
    
+ Response 200 (application/json)
    
            {
                "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImFkbWluIiwib3JpZ19pYXQiOjE0MzEzMzU1MjgsInVzZXJfaWQiOjEsImVtYWlsIjoiYWRtaW5AYWRtaW4uY29tIiwiZXhwIjoxNDM5MzM1NTI4fQ.s84IiGYLz649KILx2NfZ7KfLk928xcLJvMC2mNlXB6Q"
            }

+ Response 400 (application/json)

            {
                "non_field_errors": [
                    "Error decoding signature."
                ]
            }

# Club [/api/1.0/club/]

The club API

### Club create [POST]

+ Request
    + Headers
    
            Authorization: JWT [token]

    + Body
        
            {
                "name": "MyClub"
            }
            
+ Response 200 (application/json)

            {
                "id": 3,
                "name": "MyClub",
                "logo": "",
                "removed": false
            }

+ Response 401 (application/json)

            {
                "detail": "Las credenciales de autenticación no se proveyeron."
            }

+ Response 401 (text/html)

            CONFLICT: duplicated object

### Club list [GET]

+ Request
    + Headers
    
            Authorization: JWT [token]

+ Response 200 (application/json)

            {
                "count": 2,
                "next": null,
                "previous": null,
                "results": [
                    {
                        "id": 1,
                        "name": "TheOne",
                        "logo": "sdfsd",
                        "removed": false
                    },
                    {
                        "id": 2,
                        "name": "SDFsa",
                        "logo": "sdfds",
                        "removed": false
                    }
                ]
            }
            
+ Response 401 (application/json)

            {
                "detail": "Las credenciales de autenticación no se proveyeron."
            }
            
### Club detail [GET /api/1.0/club/{club_id}/]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id

+ Request
    + Headers
    
            Authorization: JWT [token]

+ Response 200 (application/json)

            {
                "id": 1,
                "name": "TheOne",
                "logo": "none",
                "removed": false
            }

+ Response 401 (application/json)

            {
                "detail": "Las credenciales de autenticación no se proveyeron."
            }

### Club update [PATCH /api/1.0/club/{club_id}/]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id

+ Request
    + Headers
    
            Authorization: JWT [token]
    + Body

            {
                "name": "Verdant",
                "logo": "still none",
            }

+ Response 200 (application/json)

            {
                "id": 1,
                "name": "Verdant",
                "logo": "still none",
                "removed": false
            }

+ Response 401 (application/json)

            {
                "detail": "Las credenciales de autenticación no se proveyeron."
            }

### Club delete [DELETE /api/1.0/club/{club_id}/]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id

+ Request
    + Headers
    
            Authorization: JWT [token]

+ Response 204 (application/json)

# Condition generator [/api/1.0/club/{club_id}/condition-generator/]

The condition generator API

### ConditionGenerator create [POST]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id

+ Request
    + Headers
    
            Authorization: JWT [token]

    + Body
        
            {
                "drinks": 20,
                "price": 8,
                "guest": 100,
                "start_hour": "06:00Z",
                "duration": "6",
                "description": "hailooooo",
                "zones": [1]
            }
            
+ Response 200 (application/json)

            {
                "id": "http://localhost:8000/api/1.0/club/1/condition/1/",
                "start_date": "2015-09-04T06:00:00.000000Z",
                "end_date": "2015-09-04T06:00:00.000000Z",
                "club": "http://localhost:8000/api/1.0/club/1",
                "drinks": "",
                "price": "",
                "guest": 100,
                "description": "",
                "zones": [
                    1
                ]
            }

+ Response 401 (application/json)

            {
                "detail": "Las credenciales de autenticación no se proveyeron."
            }

+ Response 401 (text/html)

            CONFLICT: duplicated object

### ConditionGenerator detail [GET /api/1.0/club/{club_id}/condition-generator/{condition_generator_id}]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id
    + condition_generator_id (required, int, `1`) ... Selected condition generator id

+ Request
    + Headers
    
            Authorization: JWT [token]

+ Response 200 (application/json)

            {
              "id": 1,
              "drinks": "45",
              "price": "56",
              "guest": 6789,
              "start_hour": "14:05:42",
              "duration": "00:00:05",
              "description": "kh",
              "club": 1,
              "zones": [
                1,
                2,
                3
              ]
            }
            
+ Response 401 (application/json)

            {
                "detail": "Las credenciales de autenticación no se proveyeron."
            }

### ConditionGenerator update [PATCH /api/1.0/club/{club_id}/condition-generator/{condition_generator_id}]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id
    + condition_generator_id (required, int, `1`) ... Selected condition generator id

+ Request
    + Headers
    
            Authorization: JWT [token]
    + Body

            {
              "drinks": "45",
              "price": "56",
              "guest": 6789,
              "start_hour": "14:05:42",
              "duration": "00:00:05",
              "description": "kh",
              "club": 1,
              "zones": [
                1,
                2,
                3
              ]
            }

+ Response 200 (application/json)

            {
              "id": 1,
              "drinks": "45",
              "price": "56",
              "guest": 6789,
              "start_hour": "14:05:42",
              "duration": "00:00:05",
              "description": "kh",
              "club": 1,
              "zones": [
                1,
                2,
                3
              ]
            }

+ Response 401 (application/json)

            {
                "detail": "Las credenciales de autenticación no se proveyeron."
            }

### ConditionGenerator delete [DELETE /api/1.0/club/{club_id}/condition-generator/{condition_generator_id}]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id
    + condition_generator_id (required, int, `1`) ... Selected condition generator id

+ Request
    + Headers
    
            Authorization: JWT [token]

+ Response 204 (application/json)


# Condition [/api/1.0/club/{club_id}/condition/]

The condition API

### Condition create [POST]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id

+ Request
    + Headers
    
            Authorization: JWT [token]

    + Body
        
            {
                "drinks":"",
                "price":"",
                "guest":"100",
                "start_date":"2015-09-04 06:00Z",
                "end_date":"2015-09-04 06:00Z",
                "description":"",
                "zones":["1"]
            }
            
+ Response 200 (application/json)

            {
                "id": "http://localhost:8000/api/1.0/club/1/condition/1/",
                "start_date": "2015-09-04T06:00:00.000000Z",
                "end_date": "2015-09-04T06:00:00.000000Z",
                "club": "http://localhost:8000/api/1.0/club/1",
                "drinks": "",
                "price": "",
                "guest": 100,
                "description": "",
                "zones": [
                    1
                ]
            }

+ Response 401 (application/json)

            {
                "detail": "Las credenciales de autenticación no se proveyeron."
            }

+ Response 401 (text/html)

            CONFLICT: duplicated object

### Condition detail [GET /api/1.0/club/{club_id}/condition/{condition_id}]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id
    + condition_id (required, int, `1`) ... Selected condition id

+ Request
    + Headers
    
            Authorization: JWT [token]

+ Response 200 (application/json)

            {
                "id": "http://localhost:8000/api/1.0/club/1/condition/1/",
                "start_date": "2015-09-04T06:00:00.000000Z",
                "end_date": "2015-09-04T06:00:00.000000Z",
                "club": "http://localhost:8000/api/1.0/club/1",
                "drinks": "",
                "price": "",
                "guest": 100,
                "description": "",
                "zones": [
                    1
                ]
            }
            
+ Response 401 (application/json)

            {
                "detail": "Las credenciales de autenticación no se proveyeron."
            }

### Condition update [PATCH /api/1.0/club/{club_id}/condition/{condition_id}]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id
    + condition_id (required, int, `1`) ... Selected condition id

+ Request
    + Headers
    
            Authorization: JWT [token]
    + Body

            {
                "drinks":"",
                "price":"",
                "guest":"100",
                "start_date":"2015-09-04 06:00Z",
                "end_date":"2015-09-04 06:00Z",
                "description":"",
                "zones":["1"]
            }

+ Response 200 (application/json)

            {
                "id": "http://localhost:8000/api/1.0/club/1/condition/1/",
                "start_date": "2015-09-04T06:00:00.000000Z",
                "end_date": "2015-09-04T06:00:00.000000Z",
                "club": "http://localhost:8000/api/1.0/club/1",
                "drinks": "20",
                "price": "8",
                "guest": 100,
                "description": "hailooooo",
                "zones": [
                    1
                ]
            }

+ Response 401 (application/json)

            {
                "detail": "Las credenciales de autenticación no se proveyeron."
            }

### Condtion delete [DELETE /api/1.0/club/{club_id}/condition/{condition_id}]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id
    + condition_id (required, int, `1`) ... Selected condition id

+ Request
    + Headers
    
            Authorization: JWT [token]

+ Response 204 (application/json)


# File [/api/1.0/file/]

The file API

### Fle create [POST]

+ Request
    + Headers
    
            Authorization: JWT [token]
            Content-disposition: attachment; filename=prueba.jpg
            
+ Response 200 (application/json)

            {
                "id": 1,
                "file": "/media/photo-sample.jpg"
            }

+ Response 404 (text/html)

            NOT FOUND

# Session [/api/1.0/club/{club_id}/session]

The Session API

### Session create [POST]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id

+ Request
    + Headers
    
            Authorization: JWT [token]

    + Body
        
            {
              "name": "Session 1",
              "event": "1",
              "start_date": "2015-05-13T15:00Z",
              "end_date": "2015-05-13T18:00Z"
            }
            
+ Response 200 (application/json)

           {
              "id": 8,
              "start_date": "2015-05-13T15:00:00.000000Z",
              "end_date": "2015-05-13T18:00:00.000000Z",
              "event": "http://localhost:8000/api/1.0/club/1/event",
              "name": "Session1"
            }

+ Response 400 (application/json)

            {
              "non_field_errors": [
                "Los campos name, event, start_date, end_date deben formar un conjunto único."
              ]
            }

+ Response 401 (application/json)

            {
                "detail": "Las credenciales de autenticación no se proveyeron."
            }

### Session list [GET]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id

+ Request
    + Headers
    
            Authorization: JWT [token]

+ Response 200 (application/json)

            {
                "id": "http://localhost:8000/api/1.0/club/1/session/1",
                "start_date": "2015-05-18T10:17:18.000000Z",
                "end_date": "2015-05-18T11:27:20.000000Z",
                "event": "http://localhost:8000/api/1.0/club/1/event/1",
                "name": "Session1"
            }

+ Response 400 (application/json)

            {
                "status": 401,
                "exception": "You are not allowed to access the content",
                "traceback": "None\n"
            }

### Session detail [GET /api/1.0/club/{club_id}/session/{session_id}]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id
    + session_id (required, int, `1`) ... Selected session id

+ Request
    + Headers
    
            Authorization: JWT [token]

+ Response 200 (application/json)

            {
                "id": "http://localhost:8000/api/1.0/club/1/session/1",
                "start_date": "2015-05-18T10:17:18.000000Z",
                "end_date": "2015-05-18T11:27:20.000000Z",
                "event": "http://localhost:8000/api/1.0/club/1/event/1",
                "name": "Session1"
            }

+ Response 401 (application/json)

            {
                "status": 401,
                "exception": "You are not allowed to access the content",
                "traceback": "None\n"
            }

+ Response 404 (application/json)

            {
                "detail": "No encontrado."
            }

### Session update [PATCH /api/1.0/club/{club_id}/session/{session_id}]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id
    + session_id (required, int, `1`) ... Selected session id

+ Request
    + Headers
    
            Authorization: JWT [token]
    + Body

            {
                "name": "Session 001"
            }

+ Response 200 (application/json)

            {
                "id": "http://localhost:8000/api/1.0/club/1/session/1",
                "start_date": "2015-05-18T10:17:18.000000Z",
                "end_date": "2015-05-18T11:27:20.000000Z",
                "event": "http://localhost:8000/api/1.0/club/1/event/1",
                "name": "Session 001"
            }

+ Response 400 (application/json)

            {
                "status": 400,
                "exception": "You must be a member of the club assigned",
                "traceback": "None\n"
            }
            
+ Response 400 (application/json)

            {
                "name": [
                    "Este campo no puede ser nulo."
                ]
            }

+ Response 401 (application/json)

            {
                "status": 401,
                "exception": "You are not allowed to access the content",
                "traceback": "None\n"
            }

# Zone [/api/1.0/club/{club_id}/zone/]

The zone API

### Zone create [POST]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id

+ Request
    + Headers
    
            Authorization: JWT [token]

    + Body
        
            {
                "name": "Zone 01"
            }
            
+ Response 200 (application/json)

            {
                "id": 1,
                "club": "http://localhost:8000/api/1.0/club/1",
                "name": "Zone 01"
            }

+ Response 401 (application/json)

            {
                "detail": "Las credenciales de autenticación no se proveyeron."
            }

+ Response 401 (text/html)

            CONFLICT: duplicated object

### Zone list [GET]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id

+ Request
    + Headers
    
            Authorization: JWT [token]

+ Response 200 (application/json)

            {
                "count": 1,
                "next": null,
                "previous": null,
                "results": [
                    {
                        "id": 1,
                        "club": "http://localhost:8000/api/1.0/club/1",
                        "name": "Zone 01"
                    }
                ]
            }
            
+ Response 401 (application/json)

            {
                "detail": "Las credenciales de autenticación no se proveyeron."
            }

### Zone update [PATCH /api/1.0/club/{club_id}/zone/{zone_id}/]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id
    + zone_id (required, int, `1`) ... Selected zone id

+ Request
    + Headers
    
            Authorization: JWT [token]
    + Body

            {
                "name": "Zone 02"
            }

+ Response 200 (application/json)

            {
                "id": 1,
                "club": "http://localhost:8000/api/1.0/club/1",
                "name": "Zona 02"
            }

+ Response 401 (application/json)

            {
                "detail": "Las credenciales de autenticación no se proveyeron."
            }

### Zone delete [DELETE /api/1.0/club/{club_id}/zone/{zone_id}/]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id
    + zone_id (required, int, `1`) ... Selected zone id

+ Request
    + Headers
    
            Authorization: JWT [token]

+ Response 204 (application/json)

# Event Event-Session [/api/1.0/club/{club_id}/event/{event_id}/event-session/?{?from,to}]

The Event Event-Session API

### Event Event-Session List [GET]

+ Parameters

    + club_id (required, int, `1`) ... Selected club id
    + event_id (required, int, `1`) ... Selected event id
    + from (optional, date) ... Start time of Filter by start_time (YYYY-MM-DD)
    + to (optional, date) ... End time of Filter by start_time (YYYY-MM-DD)

+ Request
    + Headers
    
            Authorization: JWT [token]

+ Response 200 (application/json)

            {
                "count": 1,
                "next": null,
                "previous": null,
                "results": [
                    {
                        "id": "http://localhost:8000/api/1.0/club/1/session/1",
                        "start_date": "2015-05-18T10:17:18.000000Z",
                        "end_date": "2015-05-18T11:27:20.000000Z",
                        "event": "http://localhost:8000/api/1.0/club/1/event/1",
                        "name": "event-session 001"
                    }
                ]
            }

+ Response 401 (application/json)

            {
                "status": 401,
                "exception": "You are not allowed to access the content",
                "traceback": "None\n"
            }

### Event Event-Session Create [POST]

+ Parameters

    + club_id (required, int, `1`) ... Selected club id
    + event_id (required, int, `1`) ... Selected event id

+ Request
    + Headers
    
            Authorization: JWT [token]

    + Body

            {
                "name":"Session 5",
                "start_date":"2015-04-28T11:47:51Z",
                "end_date":"2015-04-28T16:47:51Z"
            }

+ Response 200 (application/json)

            {
                "id": "http://localhost:8000/api/1.0/club/1/session/2",
                "start_date": "2015-05-18T10:13:06.000000Z",
                "end_date": "2015-05-18T14:13:07.000000Z",
                "event": "http://localhost:8000/api/1.0/club/1/event/1",
                "name": "Session 5"
            }

# Event Session [/api/1.0/club/{club_id}/event-session/?{?from,to}]

The Event Session API

### Event Session List [GET]

+ Parameters

    + club_id (required, int, `1`) ... Selected club id
    + from (optional, date, `1`) ... Start time of Filter by start_time (YYYY-MM-DD)
    + to (optional, date, `1`) ... End time of Filter by start_time (YYYY-MM-DD)

+ Request
    + Headers
    
            Authorization: JWT [token]

+ Response 200 (application/json)

            {
              "count": 2,
              "next": null,
              "previous": null,
              "results": [
                {
                  "id": 2,
                  "start_time": "2015-05-20T09:46:01.000000Z",
                  "end_time": "2015-05-20T12:46:03.000000Z",
                  "club": "http://localhost:8000/api/1.0/club/1",
                  "name": "evento 2",
                  "monday": false,
                  "tuesday": false,
                  "wednesday": false,
                  "thursday": false,
                  "friday": false,
                  "saturday": false,
                  "sunday": false,
                  "status": "1",
                  "image": "23",
                  "type": "2",
                  "start_recurrent_date": null,
                  "end_recurrent_date": null
                },
                {
                  "id": 1,
                  "start_time": "2015-05-18T10:13:06.000000Z",
                  "end_time": "2015-05-18T14:13:07.000000Z",
                  "club": "http://localhost:8000/api/1.0/club/1",
                  "name": "evento1",
                  "monday": false,
                  "tuesday": false,
                  "wednesday": false,
                  "thursday": false,
                  "friday": false,
                  "saturday": false,
                  "sunday": false,
                  "status": "1",
                  "image": " ",
                  "type": "2",
                  "start_recurrent_date": null,
                  "end_recurrent_date": null
                }
              ]
            }

+ Response 401 (application/json)

            {
                "detail": "Las credenciales de autenticación no se proveyeron."
            }
            
+ Response 401 (application/json)

            {
                "detail": "You are not a member of this club"
            }

# Event [/api/1.0/club/{club_id}/event/?{?from,to}]

The Event API

### Event List [GET]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id
    + from (optional, date, `1`) ... Start time of Filter by start_time (YYYY-MM-DD)
    + to (optional, date, `1`) ... End time of Filter by start_time (YYYY-MM-DD)
+ Request
    + Headers
    
            Authorization: JWT [token]

            
+ Response 200 (application/json)

            {
              "count": 2,
              "next": null,
              "previous": null,
              "results": [
                {
                  "id": 2,
                  "start_time": "2015-05-20T09:46:01.000000Z",
                  "end_time": "2015-05-20T12:46:03.000000Z",
                  "club": "http://localhost:8000/api/1.0/club/1",
                  "name": "evento 2",
                  "monday": false,
                  "tuesday": false,
                  "wednesday": false,
                  "thursday": false,
                  "friday": false,
                  "saturday": false,
                  "sunday": false,
                  "status": "1",
                  "image": "23",
                  "type": "2",
                  "start_recurrent_date": null,
                  "end_recurrent_date": null
                },
                {
                  "id": 1,
                  "start_time": "2015-05-18T10:13:06.000000Z",
                  "end_time": "2015-05-18T14:13:07.000000Z",
                  "club": "http://localhost:8000/api/1.0/club/1",
                  "name": "evento1",
                  "monday": false,
                  "tuesday": false,
                  "wednesday": false,
                  "thursday": false,
                  "friday": false,
                  "saturday": false,
                  "sunday": false,
                  "status": "1",
                  "image": " ",
                  "type": "2",
                  "start_recurrent_date": null,
                  "end_recurrent_date": null
                }
              ]
            }

+ Response 401 (application/json)

            {
                "detail": "Las credenciales de autenticación no se proveyeron."
            }
            
+ Response 401 (application/json)

            {
                "detail": "You are not a member of this club"
            }
            
### Event Create [POST]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id
    
+ Request
    + Headers
    
            Authorization: JWT [token]
    
    + Body
        
            {
              "name": "EVENT 406",
              "start_time": "2012-09-04 06:00Z",
              "end_time": "2012-09-04 18:00Z",
              "status": "1",
              "image": "none",
              "type": "2",
              "sessions": [
                {
                  "name": "Session 106",
                  "start_date": "2012-09-04 06:00Z",
                  "end_date": "2012-09-04 12:00Z\n"
                },
                {
                  "name": "Session 206",
                  "start_date": "2012-09-04 12:00Z",
                  "end_date": "2012-09-04 18:00Z"
                }
              ]
            }
            
+ Response 200 (application/json)

            {
              "id": 3,
              "start_time": "2012-09-04T06:00:00.000000Z",
              "end_time": "2012-09-04T18:00:00.000000Z",
              "club": "http://localhost:8000/api/1.0/club/1",
              "name": "EVENT 406",
              "monday": false,
              "tuesday": false,
              "wednesday": false,
              "thursday": false,
              "friday": false,
              "saturday": false,
              "sunday": false,
              "status": "1",
              "image": "none",
              "type": "2",
              "start_recurrent_date": null,
              "end_recurrent_date": null
            }

+ Response 401 (application/json)

            {
                "detail": "Las credenciales de autenticación no se proveyeron."
            }
            
+ Response 401 (application/json)

            {
                "detail": "You are not a member of this club"
            }

+ Response 400 (application/json)

            {
                  "non_field_errors": [
                    "Los campos club, name, start_time, end_time deben formar un conjunto único."
                  ]
            }

### Event detail [GET /api/1.0/club/{club_id}/event/{event_id}]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id
    + event_id (required, int, `1`) ... Selected event id

+ Request

    + Headers
    
            Authorization: JWT [token]

+ Response 200 (application/json)

            {
                "id": "http://localhost:8000/api/1.0/club/1/event/1",
                "start_time": "2015-05-18T10:13:06.000000Z",
                "end_time": "2015-05-18T14:13:07.000000Z",
                "start_recurrent_date": null,
                "end_recurrent_date": null,
                "club": "http://localhost:8000/api/1.0/club/1",
                "name": "evento1",
                "monday": false,
                "tuesday": false,
                "wednesday": false,
                "thursday": false,
                "friday": false,
                "saturday": false,
                "sunday": false,
                "status": "1",
                "image": " ",
                "type": "2"
            }

+ Response 404 (application/json)

            {
                "detail": "No encontrado."
            }

# Flyer event [/api/1.0/club/{club_id}/event/{event_id}/flyer/]

The flyer event API

### Flyer event create [POST]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id
    + event_id (required, int, `1`) ... Selected event id

+ Request
    + Headers
    
            Authorization: JWT [token]

    + Body
        
            {
                "uses": 100,
                "creator": 1,
                "owner": 1,
                "conditions_gen": [1,2,],
                "event": 2
            }
            
+ Response 200 (application/json)

            {
                "id": 1,
                "uses": 100,
                "creator": 1,
                "owner": 1,
                "conditions_gen": [1,2,],
                "event": 2
            }

+ Response 401 (application/json)

            {
                "detail": "Las credenciales de autenticación no se proveyeron."
            }

+ Response 401 (text/html)

            CONFLICT: duplicated object

### Flyer event detail [GET /api/1.0/club/{club_id}/event/{event_id}/flyer/{flyer_id}/]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id
    + event_id (required, int, `1`) ... Selected event id
    + flyer_id (required, int, `1`) ... Selected flyer id

+ Request
    + Headers
    
            Authorization: JWT [token]

+ Response 200 (application/json)

            {
                "id": 1,
                "uses": 100,
                "creator": 1,
                "owner": 1,
                "conditions_gen": [1,2,],
                "event": 2
            }

+ Response 401 (application/json)

            {
                "status": 401,
                "exception": "You are not allowed to access the content",
                "traceback": "None\n"
            }

+ Response 404 (application/json)

            {
                "detail": "No encontrado."
            }

### Flyer event update [PATCH /api/1.0/club/{club_id}/event/{event_id}/flyer/{flyer_id}/]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id
    + event_id (required, int, `1`) ... Selected event id
    + flyer_id (required, int, `1`) ... Selected flyer id

+ Request
    + Headers
    
            Authorization: JWT [token]
    + Body

            {
                "uses": 100,
                "creator": 1,
                "owner": 1,
                "conditions_gen": [1,2,],
                "event": 2
            }

+ Response 200 (application/json)

            {
                "id": 1,
                "uses": 100,
                "creator": 1,
                "owner": 1,
                "conditions_gen": [1,2,],
                "event": 2
            }

+ Response 401 (application/json)

            {
                "detail": "Las credenciales de autenticación no se proveyeron."
            }

### Flyer event delete [DELETE /api/1.0/club/{club_id}/event/{event_id}/flyer/{flyer_id}/]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id
    + event_id (required, int, `1`) ... Selected event id
    + flyer_id (required, int, `1`) ... Selected flyer id

+ Request
    + Headers
    
            Authorization: JWT [token]

+ Response 204 (application/json)

# Flyer session [/api/1.0/club/{club_id}/session/{session_id}/flyer/]

The flyer session API

### Flyer session create [POST]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id
    + session_id (required, int, `1`) ... Selected session id

+ Request
    + Headers
    
            Authorization: JWT [token]

    + Body
        
            {
                "uses": 100,
                "creator": 1,
                "owner": 1,
                "conditions": [1,2,],
                "session": 2
            }
            
+ Response 200 (application/json)

            {
                "id": 1,
                "uses": 100,
                "creator": 1,
                "owner": 1,
                "conditions": [1,2,],
                "session": 2
            }

+ Response 401 (application/json)

            {
                "detail": "Las credenciales de autenticación no se proveyeron."
            }

+ Response 401 (text/html)

            CONFLICT: duplicated object

### Flyer event detail [GET /api/1.0/club/{club_id}/event/{event_id}/flyer/{flyer_id}/]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id
    + event_id (required, int, `1`) ... Selected event id
    + flyer_id (required, int, `1`) ... Selected flyer id

+ Request
    + Headers
    
            Authorization: JWT [token]

+ Response 200 (application/json)

            {
                "id": 1,
                "uses": 100,
                "creator": 1,
                "owner": 1,
                "conditions_gen": [1,2,],
                "event": 2
            }

+ Response 401 (application/json)

            {
                "status": 401,
                "exception": "You are not allowed to access the content",
                "traceback": "None\n"
            }

+ Response 404 (application/json)

            {
                "detail": "No encontrado."
            }

### Flyer session update [PATCH /api/1.0/club/{club_id}/session/{session_id}/flyer/{flyer_id}/]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id
    + session_id (required, int, `1`) ... Selected session id
    + flyer_id (required, int, `1`) ... Selected flyer id

+ Request
    + Headers
    
            Authorization: JWT [token]
    + Body

            {
                "uses": 100,
                "creator": 1,
                "owner": 1,
                "conditions": [1,2,],
                "session": 2
            }

+ Response 200 (application/json)

            {
                "id": 1,
                "uses": 100,
                "creator": 1,
                "owner": 1,
                "conditions": [1,2,],
                "session": 2
            }

+ Response 401 (application/json)

            {
                "detail": "Las credenciales de autenticación no se proveyeron."
            }

### Flyer session delete [DELETE /api/1.0/club/{club_id}/session/{session_id}/flyer/{flyer_id}/]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id
    + session_id (required, int, `1`) ... Selected session id
    + flyer_id (required, int, `1`) ... Selected flyer id

+ Request
    + Headers
    
            Authorization: JWT [token]

+ Response 204 (application/json)

# Group event [/api/1.0/club/{club_id}/group/{group_id}/event/{event_id}]

The Group event API

### Group event create [POST]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id
    + group_id (required, int, `1`) ... Selected group id
    + event_id (required, int, `1`) ... Selected event id

+ Request
    + Headers
    
            Authorization: JWT [token]

    + Body
        
            {
                "free_text": true,
                "position": 1,
                "conditions": 1,
                "flyer": 1,
                "responsible": 1,
                "permissions": [
                    "CREATE_FLYERS",
                    "CONSUME_FLYERS",
                    "CREATE_DRINKS",
                    "CONSUME_DRINKS"
                ]
            }
            
+ Response 200 (application/json)

            {
                "id": 1,
                "group": 1,
                "event": 1,
                "responsible": 1,
                "free_text": true,
                "position": null,
                "conditions": null,
                "flyer": null,
                "permissions": [
                    "CREATE_FLYERS",
                    "CONSUME_FLYERS",
                    "CREATE_DRINKS",
                    "CONSUME_DRINKS"
                ]
            }

+ Response 400 (application/json)

            {
                "non_field_errors": [
                    "Los campos group, event deben formar un conjunto único."
                ]
            }

+ Response 401 (application/json)

            {
                "detail": "Las credenciales de autenticación no se proveyeron."
            }

### Group event detail [GET]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id
    + group_id (required, int, `1`) ... Selected group id
    + event_id (required, int, `1`) ... Selected event id

+ Request
    + Headers
    
            Authorization: JWT [token]

+ Response 200 (application/json)

            {
                "id": 1,
                "group": 1,
                "event": 1,
                "responsible": 1,
                "free_text": false,
                "position": 1,
                "conditions": 1,
                "flyer": null,
                "permissions": [
                    "CREATE_FLYERS",
                    "CONSUME_FLYERS",
                    "CREATE_DRINKS",
                    "CONSUME_DRINKS"
                ]
            }

+ Response 401 (application/json)

            {
                "status": 401,
                "exception": "You are not allowed to access the content",
                "traceback": "None\n"
            }

+ Response 404 (application/json)

            {
                "detail": "No encontrado."
            }

### Group event update [PATCH]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id
    + group_id (required, int, `1`) ... Selected group id
    + event_id (required, int, `1`) ... Selected event id

+ Request
    + Headers
    
            Authorization: JWT [token]
    + Body

            {
                "free_text": false,
                "position": 1,
                "conditions": 1,
                "flyer": 1,
                "responsible": 1
            }

+ Response 200 (application/json)

            {
                "id": 1,
                "group": 1,
                "event": 1,
                "responsible": 1,
                "free_text": false,
                "position": 1,
                "conditions": 1,
                "flyer": null,
                "permissions": [
                    "CREATE_FLYERS",
                    "CONSUME_FLYERS",
                    "CREATE_DRINKS",
                    "CONSUME_DRINKS"
                ]
            }

+ Response 400 (application/json)

            {
                "status": 400,
                "exception": "You must be a member of the club assigned",
                "traceback": "None\n"
            }
            
+ Response 400 (application/json)

            {
                "flyer": [
                    "Clave primaria \"1\" inválida - objeto no existe."
                ]
            }

+ Response 401 (application/json)

            {
                "status": 401,
                "exception": "You are not allowed to access the content",
                "traceback": "None\n"
            }

### Group event delete [DELETE]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id
    + group_id (required, int, `1`) ... Selected group id
    + event_id (required, int, `1`) ... Selected event id

+ Request
    + Headers

            Authorization: JWT [token]
    
+ Response 204 (application/json)

+ Response 400 (application/json)

            {
                "status": 400,
                "exception": "You must be a member of the club assigned",
                "traceback": "None\n"
            }

+ Response 401 (application/json)

            {
                "status": 401,
                "exception": "You are not allowed to access the content",
                "traceback": "None\n"
            }

+ Response 404 (application/json)

            {
                "detail": "No encontrado."
            }

# Group [/api/1.0/club/{club_id}/staff-group/]

The group API

### Group create [POST]

+ Parameters
    + club_id (required, int, `1`) ... staff's club

+ Request
    + Headers
    
            Authorization: JWT [token]

    + Body
        
            {
                "name": "The group name"
            }

+ Response 200 (application/json)
    
            {
                "id": 1,
                "club": "http://localhost:8000/api/1.0/club/1",
                "name": "The group name"
            }

+ Response 401 (application/json)

            {
                "detail": "Las credenciales de autenticación no se proveyeron."
            }
            
+ Response 409 (text/html)
            
            CONFLICT: duplicated object

### Group list [GET]

+ Request
    + Headers
    
            Authorization: JWT [token]


+ Response 200 (application/json)

            {
                "count": 2,
                "next": null,
                "previous": null,
                "results": [
                    {
                        "id": 1,
                        "club": "http://localhost:8000/api/1.0/club/1",
                        "name": "Camareros"
                    },
                    {
                        "id": 2,
                        "club": "http://localhost:8000/api/1.0/club/1",
                        "name": "Seguridad"
                    }
                ]
            }

+ Response 401 (application/json)

            {
                "detail": "Las credenciales de autenticación no se proveyeron."
            }

# Lists [/api/1.0/club/{club_id}/list/]

The list API

### List club [GET]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id

+ Request
    + Headers

            Authorization: JWT [token]
    
+ Response 200 (application/json)

            {
                "id": 1,
                "club": "http://localhost:8000/api/1.0/club/1",
                "creator": "http://localhost:8000/api/1.0/club/1/staff/1",
                "owner": "http://localhost:8000/api/1.0/club/1/staff/1"
            }

+ Response 401 (application/json)

            {
                "status": 401,
                "exception": "You are not allowed to access the content",
                "traceback": "None\n"
            }

### List club detail [GET /api/1.0/club/{club_id}/list/{list_id}]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id
    + list_id (required, int, `1`) ... Selected list id

+ Request
    + Headers

            Authorization: JWT [token]
    
+ Response 200 (application/json)

            {
                "id": 1,
                "club": "http://localhost:8000/api/1.0/club/1",
                "creator": "http://localhost:8000/api/1.0/club/1/staff/1",
                "owner": "http://localhost:8000/api/1.0/club/1/staff/1"
            }

+ Response 401 (application/json)

            {
                "status": 401,
                "exception": "You are not allowed to access the content",
                "traceback": "None\n"
            }

### List club create [POST]

+ Parameters
    + club_id (required, int, `1`, `1`) ... Selected club id

+ Request
    + Headers

            Authorization: JWT [token]

    + Body

            {
                "owner":"1",
                "creator":"1"
            }
    
+ Response 200 (application/json)

            {
                "id": "http://localhost:8000/api/1.0/club/1/list/1/",
                "club": "http://localhost:8000/api/1.0/club/1",
                "creator": "http://localhost:8000/api/1.0/club/1/staff/1",
                "owner": "http://localhost:8000/api/1.0/club/1/staff/1"
            }

+ Response 401 (application/json)

            {
                "status": 401,
                "exception": "You are not allowed to access the content",
                "traceback": "None\n"
            }

### List club delete [DELETE /api/1.0/club/{club_id}/list/{list_id}]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id
    + list_id (required, int, `1`) ... Selected list id

+ Request
    + Headers

            Authorization: JWT [token]
    
+ Response 204 (application/json)

+ Response 401 (application/json)

            {
                "status": 401,
                "exception": "You are not allowed to access the content",
                "traceback": "None\n"
            }

### List event event-session [GET /api/1.0/club/{club_id}/list/{list_id}/event/{event_id}/event-session}]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id
    + event_id (required, int, `1`) ... Selected event id

+ Request
    + Headers

            Authorization: JWT [token]
    
+ Response 200 (application/json)

            {
                "count": 1,
                "next": null,
                "previous": null,
                "results": [
                    {
                        "id": 1,
                        "owner": "http://localhost:8000/api/1.0/club/1/staff/1",
                        "list": "http://localhost:8000/api/1.0/club/1/list/1",
                        "session": "http://localhost:8000/api/1.0/club/1/session/1",
                        "block_time": 100,
                        "conditions": [
                            1
                        ]
                    }
                ]
            }

+ Response 401 (application/json)

            {
                "status": 401,
                "exception": "You are not allowed to access the content",
                "traceback": "None\n"
            }

### List event event-session create [POST /api/1.0/club/{club_id}/list/{list_id}/event/{event_id}/event-session}]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id
    + event_id (required, int, `1`) ... Selected event id

+ Request
    + Headers

            Authorization: JWT [token]

    + Body

            {
                "list":"1",
                "session":"1",
                "owner":"1",
                "conditions":["1"],
                "block_time":"100"}
    
+ Response 200 (application/json)

            {
                "id": 1,
                "owner": "http://localhost:8000/api/1.0/club/1/staff/1",
                "list": "http://localhost:8000/api/1.0/club/1/list/1",
                "session": "http://localhost:8000/api/1.0/club/1/session/1",
                "block_time": 100,
                "conditions": [
                    1
                ]
            }

+ Response 401 (application/json)

            {
                "status": 401,
                "exception": "You are not allowed to access the content",
                "traceback": "None\n"
            }

### List event [GET /api/1.0/club/{club_id}/list/{list_id}/event/]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id
    + list_id (required, int, `1`) ... Selected list id

+ Request
    + Headers

            Authorization: JWT [token]

+ Response 200 (application/json)

            {
                "count": 1,
                "next": null,
                "previous": null,
                "results": [
                    {
                        "id": "http://localhost:8000/api/1.0/club/1/event/1",
                        "start_time": "2015-05-18T10:13:06.000000Z",
                        "end_time": "2015-05-18T14:13:07.000000Z",
                        "start_recurrent_date": null,
                        "end_recurrent_date": null,
                        "club": "http://localhost:8000/api/1.0/club/1",
                        "name": "evento1",
                        "monday": false,
                        "tuesday": false,
                        "wednesday": false,
                        "thursday": false,
                        "friday": false,
                        "saturday": false,
                        "sunday": false,
                        "status": "1",
                        "image": " ",
                        "type": "2"
                    }
                ]
            }

+ Response 400 (application/json)

            {
                "status": 400,
                "exception": "You must be a member of the club assigned",
                "traceback": "None\n"
            }

### List event create [POST /api/1.0/club/{club_id}/list/{list_id}/event]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id
    + list_id (required, int, `1`) ... Selected list id

+ Request
    + Headers

            Authorization: JWT [token]
            
    + Body

            {
                "status": 1,
                "name": "evento desde lista",
                "start_time": "2026-04-28T11:47:51Z",
                "end_time": "2038-04-28T11:47:51Z",
                "type": 1,
                "image": "sdfsdfdsfs",
                "monday": true
            }

+ Response 204 (application/json)

+ Response 400 (application/json)

            {
                "status": 400,
                "exception": "You must be a member of the club assigned",
                "traceback": "None\n"
            }

### List guest [GET /api/1.0/club/{club_id}/list/{list_id}/guest/]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id
    + list_id (required, int, `1`) ... Selected list id

+ Request
    + Headers

            Authorization: JWT [token]

+ Response 200 (application/json)

            {
                "count": 0,
                "next": null,
                "previous": null,
                "results": []
            }

+ Response 400 (application/json)

            {
                "status": 400,
                "exception": "You must be a member of the club assigned",
                "traceback": "None\n"
            }

### List guest create [POST /api/1.0/club/{club_id}/list/{list_id}/guest]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id
    + list_id (required, int, `1`) ... Selected list id

+ Request
    + Headers

            Authorization: JWT [token]
            
    + Body

            {
                "aggregator": 1
                "number_of_guests": 10,
                "used": 0,
                "email": "mail@mail.com",
                "phone": "111 000 111",
                "drink": 1
            }

+ Response 204 (application/json)

+ Response 400 (application/json)

            {
                "status": 400,
                "exception": "You must be a member of the club assigned",
                "traceback": "None\n"
            }

### List guest delete [DELETE /api/1.0/club/{club_id}/list/{list_id}/guest/{guest_id}]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id
    + list_id (required, int, `1`) ... Selected list id
    + guest_id (required, int, `1`) ... Selected guest id

+ Request
    + Headers

            Authorization: JWT [token]
    
+ Response 204 (application/json)

+ Response 400 (application/json)

            {
                "status": 400,
                "exception": "You must be a member of the club assigned",
                "traceback": "None\n"
            }

+ Response 401 (application/json)

            {
                "status": 401,
                "exception": "You are not allowed to access the content",
                "traceback": "None\n"
            }

# List RRPP [/api/1.0/club/{club_id}/list/{list_id}/rrpp/]

The list RRPP API

### List RRPP create [POST]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id
    + list_id (required, int, `1`) ... Selected list id

+ Request
    + Headers
    
            Authorization: JWT [token]

    + Body
        
            {
                "staff": 1,
                "number_of_guests": 40
            }
            
+ Response 200 (application/json)

            {
                "id": 1,
                "staff": 1,
                "number_of_guests": 40
            }

+ Response 401 (application/json)

            {
                "detail": "Las credenciales de autenticación no se proveyeron."
            }

+ Response 401 (text/html)

            CONFLICT: duplicated object

### List RRPP list [GET]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id

+ Request
    + Headers
    
            Authorization: JWT [token]

+ Response 200 (application/json)

            {
                "count": 2,
                "next": null,
                "previous": null,
                "results": [
                    {
                        "id": 1,
                        "staff": 1,
                        "number_of_guests": 40
                    },
                    {
                        "id": 2,
                        "staff": 1,
                        "number_of_guests": 20
                    }
                ]
            }
            
+ Response 401 (application/json)

            {
                "detail": "Las credenciales de autenticación no se proveyeron."
            }

### List RRPP detail [GET /api/1.0/club/{club_id}/list/{list_id}/rrpp/{list_rrpp_id}]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id
    + list_id (required, int, `1`) ... Selected list id
    + list_rrpp_id (required, int, `1`) ... Selected list rrpp id

+ Request
    + Headers
    
            Authorization: JWT [token]

+ Response 200 (application/json)

            {
                "id": 1,
                "staff": 1,
                "number_of_guests": 40
            }

+ Response 401 (application/json)

            {
                "status": 401,
                "exception": "You are not allowed to access the content",
                "traceback": "None\n"
            }

+ Response 404 (application/json)

            {
                "detail": "No encontrado."
            }

### List RRPP update [PATCH /api/1.0/club/{club_id}/list/{list_id}/rrpp/{list_rrpp_id}]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id
    + list_id (required, int, `1`) ... Selected list id
    + list_rrpp_id (required, int, `1`) ... Selected list rrpp id

+ Request
    + Headers
    
            Authorization: JWT [token]
    + Body

            {
                "number_of_guests": 50
            }

+ Response 200 (application/json)

            {
                "id": 1,
                "staff": 1,
                "number_of_guests": 50
            }

+ Response 401 (application/json)

            {
                "detail": "Las credenciales de autenticación no se proveyeron."
            }

### List RRPP delete [DELETE /api/1.0/club/{club_id}/list/{list_id}/rrpp/{list_rrpp_id}]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id
    + list_id (required, int, `1`) ... Selected list id
    + list_rrpp_id (required, int, `1`) ... Selected list rrpp id

+ Request
    + Headers
    
            Authorization: JWT [token]

+ Response 204 (application/json)

# List session guest [/api/1.0/club/{club_id}/list/{list_id}/session/{session_id}/guest/]

The list session guest API

### List session guest create [POST]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id
    + list_id (required, int, `1`) ... Selected list id
    + session_id (required, int, `1`) ... Selected session id

+ Request
    + Headers
    
            Authorization: JWT [token]

    + Body
        
            {
                "drink": "",
                "aggregator": 1,
                "number_of_guests": 100,
                "used": 20,
                "email": "mail@mail.es",
                "phone": "983439744587"
            }
            
+ Response 200 (application/json)

            {
                "id": 1,
                "drink": "",
                "aggregator": 1,
                "number_of_guests": 100,
                "used": 20,
                "email": "mail@mail.es",
                "phone": "983439744587"
            }

+ Response 401 (application/json)

            {
                "detail": "Las credenciales de autenticación no se proveyeron."
            }

+ Response 401 (text/html)

            CONFLICT: duplicated object

### List session guest list [GET]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id
    + list_id (required, int, `1`) ... Selected list id
    + session_id (required, int, `1`) ... Selected session id

+ Request
    + Headers
    
            Authorization: JWT [token]

+ Response 200 (application/json)

            {
                "count": 1,
                "next": null,
                "previous": null,
                "results": [
                    {
                        "id": 1,
                        "drink": "",
                        "aggregator": 1,
                        "number_of_guests": 100,
                        "used": 20,
                        "email": "mail@mail.es",
                        "phone": "983439744587"
                    },
                    {
                        "id": 1,
                        "drink": "",
                        "aggregator": 1,
                        "number_of_guests": 100,
                        "used": 20,
                        "email": "mail@mail.es",
                        "phone": "983439744587"
                    }
                ]
            }
            
+ Response 401 (application/json)

            {
                "detail": "Las credenciales de autenticación no se proveyeron."
            }

### List session guest detail [GET /api/1.0/club/{club_id}/list/{list_id}/session/{session_id}/guest/{guest_id}/]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id
    + list_id (required, int, `1`) ... Selected list id
    + session_id (required, int, `1`) ... Selected session id
    + guest_id (required, int, `1`) ... Selected guest id

+ Request
    + Headers
    
            Authorization: JWT [token]

+ Response 200 (application/json)

            {
                "id": 1,
                "drink": "",
                "aggregator": 1,
                "number_of_guests": 100,
                "used": 20,
                "email": "mail@mail.es",
                "phone": "983439744587"
            }

+ Response 401 (application/json)

            {
                "status": 401,
                "exception": "You are not allowed to access the content",
                "traceback": "None\n"
            }

+ Response 404 (application/json)

            {
                "detail": "No encontrado."
            }

### List session guest update [PATCH /api/1.0/club/{club_id}/list/{list_id}/session/{session_id}/guest/{guest_id}/]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id
    + list_id (required, int, `1`) ... Selected list id
    + session_id (required, int, `1`) ... Selected session id
    + guest_id (required, int, `1`) ... Selected guest id

+ Request
    + Headers
    
            Authorization: JWT [token]
    + Body

            {
                "drink": "",
                "number_of_guests": 200,
                "used": 20,
                "email": "mail@mail.es",
                "phone": "983439744587"
            }

+ Response 200 (application/json)

            {
                "id": 1,
                "drink": "",
                "aggregator": 1,
                "number_of_guests": 200,
                "used": 20,
                "email": "mail@mail.es",
                "phone": "983439744587"
            }

+ Response 401 (application/json)

            {
                "detail": "Las credenciales de autenticación no se proveyeron."
            }

### List session guest delete [DELETE /api/1.0/club/{club_id}/list/{list_id}/session/{session_id}/guest/{guest_id}/]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id
    + list_id (required, int, `1`) ... Selected list id
    + session_id (required, int, `1`) ... Selected session id
    + guest_id (required, int, `1`) ... Selected guest id

+ Request
    + Headers
    
            Authorization: JWT [token]

+ Response 204 (application/json)

# List session rrpp [/api/1.0/club/{club_id}/list/{list_id}/session/{session_id}/rrpp/]

The list session rrpp API

### List session rrpp create [POST]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id
    + list_id (required, int, `1`) ... Selected list id
    + session_id (required, int, `1`) ... Selected session id

+ Request
    + Headers
    
            Authorization: JWT [token]

    + Body
        
            {
                "staff": 1,
                "number_of_guests": 4,
            }
            
+ Response 200 (application/json)

            {
                "id": 1,
                "staff": 2,
                "number_of_guests": 4,
            }

+ Response 401 (application/json)

            {
                "detail": "Las credenciales de autenticación no se proveyeron."
            }

+ Response 401 (text/html)

            CONFLICT: duplicated object

### List session rrpp list [GET]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id
    + list_id (required, int, `1`) ... Selected list id
    + session_id (required, int, `1`) ... Selected session id

+ Request
    + Headers
    
            Authorization: JWT [token]

+ Response 200 (application/json)

            {
                "count": 1,
                "next": null,
                "previous": null,
                "results": [
                    {
                        "id": 1,
                        "staff": 1,
                        "number_of_guests": 4,
                    },
                    {
                        "id": 2,
                        "staff": 3,
                        "number_of_guests": 40,
                    }
                ]
            }
            
+ Response 401 (application/json)

            {
                "detail": "Las credenciales de autenticación no se proveyeron."
            }

### List session rrpp detail [GET /api/1.0/club/{club_id}/list/{list_id}/session/{session_id}/rrpp/{rrpp_id}/]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id
    + list_id (required, int, `1`) ... Selected list id
    + session_id (required, int, `1`) ... Selected session id
    + rrpp_id (required, int, `1`) ... Selected rrpp id

+ Request
    + Headers
    
            Authorization: JWT [token]

+ Response 200 (application/json)

            {
                "id": 1,
                "staff": 1,
                "number_of_guests": 4,
            }

+ Response 401 (application/json)

            {
                "status": 401,
                "exception": "You are not allowed to access the content",
                "traceback": "None\n"
            }

+ Response 404 (application/json)

            {
                "detail": "No encontrado."
            }

### List session rrpp update [PATCH /api/1.0/club/{club_id}/list/{list_id}/session/{session_id}/rrpp/{rrpp_id}/]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id
    + list_id (required, int, `1`) ... Selected list id
    + session_id (required, int, `1`) ... Selected session id
    + rrpp_id (required, int, `1`) ... Selected rrpp id

+ Request
    + Headers
    
            Authorization: JWT [token]
    + Body

            {
                "number_of_guests": 23,
            }

+ Response 200 (application/json)

            {
                "id": 1,
                "staff": 1,
                "number_of_guests": 23,
            }

+ Response 401 (application/json)

            {
                "detail": "Las credenciales de autenticación no se proveyeron."
            }

### List session rrpp delete [DELETE /api/1.0/club/{club_id}/list/{list_id}/session/{session_id}/rrpp/{rrpp_id}/]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id
    + list_id (required, int, `1`) ... Selected list id
    + session_id (required, int, `1`) ... Selected session id
    + rrpp_id (required, int, `1`) ... Selected rrpp id

+ Request
    + Headers
    
            Authorization: JWT [token]

+ Response 204 (application/json)

# List session [/api/1.0/club/{club_id}/list/{list_id}/session/]

The list session API

### List session create [POST]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id
    + list_id (required, int, `1`) ... Selected list id

+ Request
    + Headers
    
            Authorization: JWT [token]

    + Body
        
            {
                "list": 11,
                "session": 21,
                "owner": 1,
                "conditions": [1,3,],
                "block_time": 100,
            }
            
+ Response 200 (application/json)

            {
                "id": 50,
                "list": 11,
                "session": 21,
                "owner": 1,
                "conditions": [1,3,],
                "block_time": 100,
            }

+ Response 401 (application/json)

            {
                "detail": "Las credenciales de autenticación no se proveyeron."
            }

+ Response 401 (text/html)

            CONFLICT: duplicated object

### List session list [GET]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id

+ Request
    + Headers
    
            Authorization: JWT [token]

+ Response 200 (application/json)

            {
                "count": 2,
                "next": null,
                "previous": null,
                "results": [
                    {
                        "id": 50,
                        "list": 11,
                        "session": 21,
                        "owner": 1,
                        "conditions": [1,3,],
                        "block_time": 100,
                    },
                    {
                        "id": 51,
                        "list": 12,
                        "session": 21,
                        "owner": 1,
                        "conditions": [2,3,],
                        "block_time": 80,
                    }
                ]
            }
            
+ Response 401 (application/json)

            {
                "detail": "Las credenciales de autenticación no se proveyeron."
            }

# Staff event permission [/api/1.0/club/{club_id}/staff/{staff_id}/event/{event_id}/permission]

Staff event permission API

### Staff event permission create [POST]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id
    + staff_id (required, int, `1`) ... Selected staff id
    + event_id (required, int, `1`) ... Selected event id

+ Request
    + Headers
    
            Authorization: JWT [token]

    + Body
        
            {
                "permissions":[
                                "5",
                                "6",
                                "7"
                            ]
            }
            
+ Response 200 (application/json)

            {
                "id": "1",
                "staff": "http://localhost:8000/api/1.0/club/1/staff/1",
                "event": "http://localhost:8000/api/1.0/club/1/event/1",
                "permissions": [
                    5,
                    6,
                    7
                ]
            }

+ Response 400 (application/json)

            {
                "status": 400,
                "exception": "You must be a member of the club assigned",
                "traceback": "None\n"
            }

+ Response 401 (application/json)

            {
                "status": 401,
                "exception": "You are not allowed to access the content",
                "traceback": "None\n"
            }

+ Response 401 (application/json)

            {
                "detail": "Las credenciales de autenticación no se proveyeron."
            }

### Staff event permission detail [GET]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id
    + staff_id (required, int, `1`) ... Selected staff id
    + event_id (required, int, `1`) ... Selected event id

+ Request
    + Headers
    
            Authorization: JWT [token]

+ Response 200 (application/json)

            {
                "id": "1",
                "staff": "http://localhost:8000/api/1.0/club/1/staff/1",
                "event": "http://localhost:8000/api/1.0/club/1/event/1",
                "permissions": [
                    5,
                    6,
                    7
                ]
            }

+ Response 401 (application/json)

            {
                "status": 401,
                "exception": "You are not allowed to access the content",
                "traceback": "None\n"
            }

+ Response 404 (application/json)

            {
                "detail": "No encontrado."
            }

### Staff event permission update [PATCH]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id
    + staff_id (required, int, `1`) ... Selected staff id
    + event_id (required, int, `1`) ... Selected event id

+ Request
    + Headers
    
            Authorization: JWT [token]
    + Body

            {
                "permissions":[
                                "2",
                                "3"
                            ]
            }

+ Response 200 (application/json)

            {
                "id": "1",
                "staff": "http://localhost:8000/api/1.0/club/1/staff/1",
                "event": "http://localhost:8000/api/1.0/club/1/event/1",
                "permissions": [
                    2,
                    3
                ]
            }

+ Response 400 (application/json)

            {
                "status": 400,
                "exception": "You must be a member of the club assigned",
                "traceback": "None\n"
            }

+ Response 401 (application/json)

            {
                "status": 401,
                "exception": "You are not allowed to access the content",
                "traceback": "None\n"
            }

### Staff event permission delete [DELETE]

+ Parameters
    + club_id (required, int), `1`) ... Selected club id
    + staff_id (required, int, `1`) ... Selected staff id
    + event_id (required, int, `1`) ... Selected event id

+ Request
    + Headers

            Authorization: JWT [token]
    
+ Response 204 (application/json)

+ Response 400 (application/json)

            {
                "status": 400,
                "exception": "You must be a member of the club assigned",
                "traceback": "None\n"
            }

+ Response 401 (application/json)

            {
                "status": 401,
                "exception": "You are not allowed to access the content",
                "traceback": "None\n"
            }

+ Response 404 (application/json)

            {
                "detail": "No encontrado."
            }

# Staff event [/api/1.0/club/{club_id}/staff/{staff_id}/event/{event_id}]

The Staff event API

### Staff event create [POST]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id
    + staff_id (required, int, `1`) ... Selected staff id
    + event_id (required, int, `1`) ... Selected event id

+ Request
    + Headers
    
            Authorization: JWT [token]

    + Body
        
            {
                "free_text": true,
                "position": 1,
                "conditions": 1,
                "flyer": 1,
                "responsible": 1,
                "permissions": [
                    "CREATE_FLYERS",
                    "CONSUME_FLYERS",
                    "CREATE_DRINKS",
                    "CONSUME_DRINKS"
                ]
            }
            
+ Response 200 (application/json)

            {
                "id": 1,
                "group": 1,
                "event": 1,
                "responsible": 1,
                "free_text": true,
                "position": null,
                "conditions": null,
                "flyer": null,
                "permissions": [
                    "CREATE_FLYERS",
                    "CONSUME_FLYERS",
                    "CREATE_DRINKS",
                    "CONSUME_DRINKS"
                ]
            }

+ Response 400 (application/json)

            {
                "non_field_errors": [
                    "Los campos group, event deben formar un conjunto único."
                ]
            }

+ Response 401 (application/json)

            {
                "detail": "Las credenciales de autenticación no se proveyeron."
            }

### Staff event detail [GET]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id
    + staff_id (required, int, `1`) ... Selected staff id
    + event_id (required, int, `1`) ... Selected event id

+ Request
    + Headers
    
            Authorization: JWT [token]

+ Response 200 (application/json)

            {
                "id": 1,
                "event": 1,
                "responsible": 1,
                "staff": 1,
                "free_text": false,
                "position": null,
                "conditions": null,
                "flyer": null,
                "permissions": [
                    "CREATE_FLYERS",
                    "CONSUME_FLYERS",
                    "CREATE_DRINKS",
                    "CONSUME_DRINKS"
                ]
            }

+ Response 401 (application/json)

            {
                "status": 401,
                "exception": "You are not allowed to access the content",
                "traceback": "None\n"
            }

+ Response 404 (application/json)

            {
                "detail": "No encontrado."
            }

### Staff event update [PATCH]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id
    + staff_id (required, int, `1`) ... Selected staff id
    + event_id (required, int, `1`) ... Selected event id

+ Request
    + Headers
    
            Authorization: JWT [token]
    + Body

            {
                "free_text": false,
                "position": 1,
                "conditions": 1,
                "flyer": 1,
                "responsible": 1,
                "permissions": [
                    "CREATE_FLYERS",
                    "CONSUME_FLYERS",
                    "CREATE_DRINKS",
                    "CONSUME_DRINKS"
                ]
            }

+ Response 200 (application/json)

            {
                "id": 1,
                "event": 1,
                "responsible": 1,
                "staff": 1,
                "free_text": true,
                "position": null,
                "conditions": null,
                "flyer": null
            }

+ Response 400 (application/json)

            {
                "status": 400,
                "exception": "You must be a member of the club assigned",
                "traceback": "None\n"
            }
            
+ Response 400 (application/json)

            {
                "flyer": [
                    "Clave primaria \"1\" inválida - objeto no existe."
                ]
            }

+ Response 401 (application/json)

            {
                "status": 401,
                "exception": "You are not allowed to access the content",
                "traceback": "None\n"
            }

### Staff event delete [DELETE]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id
    + staff_id (required, int, `1`) ... Selected staff id
    + event_id (required, int, `1`) ... Selected event id

+ Request
    + Headers

            Authorization: JWT [token]
    
+ Response 204 (application/json)

+ Response 400 (application/json)

            {
                "status": 400,
                "exception": "You must be a member of the club assigned",
                "traceback": "None\n"
            }

+ Response 401 (application/json)

            {
                "status": 401,
                "exception": "You are not allowed to access the content",
                "traceback": "None\n"
            }

+ Response 404 (application/json)

            {
                "detail": "No encontrado."
            }

# Staff group permission [/api/1.0/club/{club_id}/group/{group_id}/event/{event_id}/permission]

Staff group permission API

### Staff group permission create [POST]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id
    + group_id (required, int, `1`) ... Selected group id
    + event_id (required, int, `1`) ... Selected event id

+ Request
    + Headers
    
            Authorization: JWT [token]

    + Body
        
            {
                "permissions":[
                                "5",
                                "6",
                                "7"
                            ]
            }
            
+ Response 200 (application/json)

            {
                "id": "http://localhost:8000/api/1.0/club/1/group/1/event/1/permission",
                "group": "http://localhost:8000/api/1.0/club/1/staff-group/1",
                "event": "http://localhost:8000/api/1.0/club/1/event/1",
                "permissions": [
                    5,
                    6,
                    7
                ]
            }

+ Response 400 (application/json)

            {
                "status": 400,
                "exception": "You must be a member of the club assigned",
                "traceback": "None\n"
            }

+ Response 401 (application/json)

            {
                "status": 401,
                "exception": "You are not allowed to access the content",
                "traceback": "None\n"
            }

+ Response 401 (application/json)

            {
                "detail": "Las credenciales de autenticación no se proveyeron."
            }

### Staff group permission detail [GET]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id
    + group_id (required, int, `1`) ... Selected group id
    + event_id (required, int, `1`) ... Selected event id

+ Request
    + Headers
    
            Authorization: JWT [token]

+ Response 200 (application/json)

            {
                "id": "http://localhost:8000/api/1.0/club/1/group/1/event/1/permission",
                "group": "http://localhost:8000/api/1.0/club/1/staff-group/1",
                "event": "http://localhost:8000/api/1.0/club/1/event/1",
                "permissions": []
            }

+ Response 401 (application/json)

            {
                "status": 401,
                "exception": "You are not allowed to access the content",
                "traceback": "None\n"
            }

+ Response 404 (application/json)

            {
                "detail": "No encontrado."
            }

### Staff group permission update [PATCH]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id
    + group_id (required, int, `1`) ... Selected group id
    + event_id (required, int, `1`) ... Selected event id

+ Request
    + Headers
    
            Authorization: JWT [token]
    + Body

            {
                "permissions":[
                                "1",
                                "2",
                                "3"
                            ]
            }

+ Response 200 (application/json)

            {
                "id": "http://localhost:8000/api/1.0/club/1/group/1/event/1/permission",
                "group": "http://localhost:8000/api/1.0/club/1/staff-group/1",
                "event": "http://localhost:8000/api/1.0/club/1/event/1",
                "permissions": [
                    1,
                    2,
                    3
                ]
            }

+ Response 400 (application/json)

            {
                "status": 400,
                "exception": "You must be a member of the club assigned",
                "traceback": "None\n"
            }

+ Response 401 (application/json)

            {
                "status": 401,
                "exception": "You are not allowed to access the content",
                "traceback": "None\n"
            }

### Staff group permission delete [DELETE]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id
    + group_id (required, int, `1`) ... Selected group id
    + event_id (required, int, `1`) ... Selected event id

+ Request
    + Headers

            Authorization: JWT [token]
    
+ Response 204 (application/json)

+ Response 400 (application/json)

            {
                "status": 400,
                "exception": "You must be a member of the club assigned",
                "traceback": "None\n"
            }

+ Response 401 (application/json)

            {
                "status": 401,
                "exception": "You are not allowed to access the content",
                "traceback": "None\n"
            }

+ Response 404 (application/json)

            {
                "detail": "No encontrado."
            }

# Staff session permission [/api/1.0/club/{club_id}/staff/{staff_id}/session/{session_id}/permission]

Staff session permission API

### Staff session permission create [POST]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id
    + staff_id (required, int, `1`) ... Selected staff id
    + session_id (required, int, `1`) ... Selected session id

+ Request
    + Headers
    
            Authorization: JWT [token]

    + Body
        
            {
                "permissions":[
                                "5",
                                "6",
                                "7"
                            ]
            }
            
+ Response 200 (application/json)

            {
                "id": "http://localhost:8000/api/1.0/club/1/staff/1/session/1/permission",
                "staff": "http://localhost:8000/api/1.0/club/1/staff/1",
                "session": "http://localhost:8000/api/1.0/club/1/session/1",
                "permissions": [
                    5,
                    6,
                    7
                ]
            }

+ Response 400 (application/json)

            {
                "status": 400,
                "exception": "You must be a member of the club assigned",
                "traceback": "None\n"
            }

+ Response 401 (application/json)

            {
                "status": 401,
                "exception": "You are not allowed to access the content",
                "traceback": "None\n"
            }

+ Response 401 (application/json)

            {
                "detail": "Las credenciales de autenticación no se proveyeron."
            }

### Staff session permission detail [GET]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id
    + staff_id (required, int, `1`) ... Selected staff id
    + session_id (required, int, `1`) ... Selected session id

+ Request
    + Headers
    
            Authorization: JWT [token]

+ Response 200 (application/json)

            {
                "id": "http://localhost:8000/api/1.0/club/1/staff/1/session/1/permission",
                "staff": "http://localhost:8000/api/1.0/club/1/staff/1",
                "session": "http://localhost:8000/api/1.0/club/1/session/1",
                "permissions": [
                    5,
                    6,
                    7
                ]
            }

+ Response 401 (application/json)

            {
                "status": 401,
                "exception": "You are not allowed to access the content",
                "traceback": "None\n"
            }

+ Response 404 (application/json)

            {
                "detail": "No encontrado."
            }

### Staff session permission update [PATCH]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id
    + staff_id (required, int, `1`) ... Selected staff id
    + session_id (required, int, `1`) ... Selected session id

+ Request
    + Headers
    
            Authorization: JWT [token]
    + Body

            {
                "permissions":[
                                "2",
                                "3"
                            ]
            }

+ Response 200 (application/json)

            {
                "id": "http://localhost:8000/api/1.0/club/1/staff/1/session/1/permission",
                "staff": "http://localhost:8000/api/1.0/club/1/staff/1",
                "session": "http://localhost:8000/api/1.0/club/1/session/1",
                "permissions": [
                    2,
                    3
                ]
            }

+ Response 400 (application/json)

            {
                "status": 400,
                "exception": "You must be a member of the club assigned",
                "traceback": "None\n"
            }

+ Response 401 (application/json)

            {
                "status": 401,
                "exception": "You are not allowed to access the content",
                "traceback": "None\n"
            }

### Staff session permission delete [DELETE]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id
    + staff_id (required, int, `1`) ... Selected staff id
    + session_id (required, int, `1`) ... Selected session id

+ Request
    + Headers

            Authorization: JWT [token]
    
+ Response 204 (application/json)

+ Response 400 (application/json)

            {
                "status": 400,
                "exception": "You must be a member of the club assigned",
                "traceback": "None\n"
            }

+ Response 401 (application/json)

            {
                "status": 401,
                "exception": "You are not allowed to access the content",
                "traceback": "None\n"
            }

+ Response 404 (application/json)

            {
                "detail": "No encontrado."
            }

# Staff Session [/api/1.0/club/{club_id}/staff/{staff_id}/session/{session_id}]

The staff sesssion API

### Staff Session Detail [GET]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id
    + staff_id (required, int, `1`) ... Selected staff id
    + session_id (required, int, `1`) ... Selected session id

+ Request
    + Headers

            Authorization: JWT [token]
            
+ Response 200 (application/json)

            {
                "id": 11,
                "session": 1,
                "responsible": 1,
                "staff": 1,
                "free_text": false,
                "generator": "S-S",
                "conditions": null,
                "flyer": null,
                "position": null,
                "permissions": [
                    "CREATE_FLYERS",
                    "CONSUME_FLYERS",
                    "CREATE_DRINKS",
                    "CONSUME_DRINKS"
                ]
            }

+ Response 401 (application/json)

            {
                "detail": "Las credenciales de autenticación no se proveyeron."
            }

+ Response 401 (text/html)

            "detail" - "Las credenciales de autenticación no se proveyeron."

### Staff Session Create [POST]

+ Request
    + Headers
    
            Authorization: JWT [token]

    + Body
        
            {
                "responsible": "1",
                "free_text": "False",
                "conditions" : 1,
                "permissions": [
                    "CREATE_FLYERS",
                    "CONSUME_FLYERS",
                    "CREATE_DRINKS",
                    "CONSUME_DRINKS"
                ]
            }
            
+ Response 201 (application/json)

            {
                "id": 12,
                "session": 1,
                "responsible": 1,
                "staff": 1,
                "free_text": false,
                "generator": "S-S",
                "conditions": 1,
                "flyer": null,
                "position": null,
                "permissions": [
                    "CREATE_FLYERS",
                    "CONSUME_FLYERS",
                    "CREATE_DRINKS",
                    "CONSUME_DRINKS"
                ]
            }
+ Response 409 (application/json)

            {
                "409-Conflict": "Staff-session already exists"
            }
+ Response 409 (text/html)

            CONFLICT: duplicated object


+ Response 401 (application/json)

            {
                "detail": "Las credenciales de autenticación no se proveyeron."
            }

+ Response 401 (text/html)

            "detail" - "Las credenciales de autenticación no se proveyeron."

### Staff Session Update [PATCH]

+ Request
    + Headers
    
            Authorization: JWT [token]

    + Body
        
            {
                "responsible": "1",
                "free_text": "True",
                "conditions" : 1
            }
            
+ Response 200 (application/json)

            {
                "id": 12,
                "session": 1,
                "responsible": 1,
                "staff": 1,
                "free_text": true,
                "generator": "S-S",
                "conditions": 1,
                "flyer": null,
                "position": null,
                "permissions": [
                    "CREATE_FLYERS",
                    "CONSUME_FLYERS",
                    "CREATE_DRINKS",
                    "CONSUME_DRINKS"
                ]
            }

+ Response 404 (application/json)

            {
                "detail: "No encontrado"
            }

+ Response 404 (text/html)

            "No encontrado"

+ Response 409 (text/html)

            CONFLICT: duplicated object


+ Response 401 (application/json)

            {
                "detail": "Las credenciales de autenticación no se proveyeron."
            }

### Staff Session Delete [DELETE]

+ Request
    + Headers
    
            Authorization: JWT [token]

    
            
+ Response 204 (application/json)

            
+ Response 404 (application/json)

            {
                "detail: "No encontrado"
            }

+ Response 409 (text/html)

            CONFLICT: duplicated object


+ Response 401 (application/json)

            {
                "detail": "Las credenciales de autenticación no se proveyeron."
            }

# Staff [/api/1.0/club/{club_id}/staff/]

The staff API

### Staff create [POST]

+ Request
    + Headers
    
            Authorization: JWT [token]

    + Body
        
            {
                "club": 1,
                "user": 1,
                "group": 1,
                "permissions": [
                    "CLUB_ACCESS",
                    "CREATE_EVENT",
                    "CREATE_STAFF"
                ]
            }
            
+ Response 200 (application/json)

            {
                "id": 3,
                "club": 1,
                "user": 1,
                "group": 3,
                "permissions": [
                    "CLUB_ACCESS",
                    "CREATE_EVENT",
                    "CREATE_STAFF"
                ]
            }

+ Response 401 (application/json)

            {
                "detail": "Las credenciales de autenticación no se proveyeron."
            }

+ Response 401 (text/html)

            CONFLICT: duplicated object

### Staff list [GET]

+ Request
    + Headers
    
            Authorization: JWT [token]

+ Response 200 (application/json)

            {
            "count": 3,
            "next": null,
            "previous": null,
            "results": [
                {
                    "id": 1,
                    "club": 1,
                    "user": 1,
                    "group": 1,
                    "permissions": [
                        "CLUB_ACCESS",
                        "CREATE_EVENT",
                        "CREATE_STAFF"
                }
            ]
        }
            
+ Response 401 (application/json)

            {
                "detail": "Las credenciales de autenticación no se proveyeron."
            }
            
### Staff detail [GET /api/1.0/club/{club_id}/staff/{staff_id}/]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id
    + staff_id (required, int, `1`) ... Selected staff id

+ Request
    + Headers
    
            Authorization: JWT [token]

+ Response 200 (application/json)

            {
                "id": 1,
                "club": 1,
                "user": 1,
                "group": 1,
                "permissions": [
                    "CLUB_ACCESS",
                    "CREATE_EVENT",
                    "CREATE_STAFF"
                ]
            }

+ Response 401 (text/html)

            You are not allowed to access the content

### Staff update [PATCH /api/1.0/club/{club_id}/staff/{staff_id}/]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id
    + staff_id (required, int, `1`) ... Selected staff id

+ Request
    + Headers
    
            Authorization: JWT [token]
    + Body

            {
                "group": 2,
                "permissions": [
                    "CLUB_ACCESS",
                    "CREATE_STAFF"
                ]
            }

+ Response 200 (application/json)

            {
                "id": 1,
                "club": 1,
                "user": 1,
                "group": 2,
                "permissions": [
                    "CLUB_ACCESS",
                    "CREATE_STAFF"
                ]
            }

+ Response 401 (text/html)

            You are not allowed to access the content

### Staff events [GET /api/1.0/club/{club_id}/staff/{staff_id}/event/]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id
    + staff_id (required, int, `1`) ... Selected staff id

+ Request
    + Headers
    
            Authorization: JWT [token]

+ Response 200 (application/json)

            {
                "count": 2,
                "next": null,
                "previous": null,
                "results": [
                    {
                        "id": 1,
                        "start_time": "2015-05-11T14:15:35.000000Z",
                        "end_time": "2015-05-11T14:15:36.000000Z",
                        "club": 1,
                        "name": "Event 001",
                        "monday": true,
                        "tuesday": true,
                        "wednesday": false,
                        "thursday": false,
                        "friday": false,
                        "saturday": false,
                        "sunday": false,
                        "status": "1",
                        "image": "none",
                        "type": "1"
                    },
                    {
                        "id": 2,
                        "start_time": "2012-09-04T06:00:00.000000Z",
                        "end_time": "2012-09-04T18:00:00.000000Z",
                        "club": 1,
                        "name": "EVENT 002",
                        "monday": false,
                        "tuesday": false,
                        "wednesday": false,
                        "thursday": false,
                        "friday": false,
                        "saturday": false,
                        "sunday": false,
                        "status": "1",
                        "image": "none",
                        "type": "2"
                    }
                ]
            }

+ Response 401 (text/html)

            You are not allowed to access the content

+ Response 404 (text/html)

            StaffEvent matching query does not exist.

### Staff sessions [GET /api/1.0/club/{club_id}/staff/{staff_id}/session/]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id
    + staff_id (required, int, `1`) ... Selected staff id

+ Request
    + Headers
    
            Authorization: JWT [token]

+ Response 200 (application/json)

            {
                TODO - NOT IMPLEMENTED YET
            }

+ Response 401 (text/html)

            You are not allowed to access the content

+ Response 404 (text/html)

            StaffSession matching query does not exist.

### Staff stats [GET /api/1.0/club/{club_id}/staff/{staff_id}/stats/]

+ Parameters
    + club_id (required, int, `1`) ... Selected club id
    + staff_id (required, int, `1`) ... Selected staff id

+ Request
    + Headers
    
            Authorization: JWT [token]

+ Response 200 (application/json)

            TODO - NEEDS DEFINITION

+ Response 401 (text/html)

            You are not allowed to access the content

+ Response 404 (text/html)

            StaffSession matching query does not exist.
